This protocol graph demo integrates a functional block that captures frames over the 
HDMI interface and sends them over the internal network-on-chip to the ETH interface. 

This demos provides an experimental environment for a real-world case study: a smart 
camera demonstrator. Our smart camera consists of Xilinx ML605 board (autonomous 
networking architecture, person/object tracking), an HDMI FMC Module, and a Panasonic 
HC-V707/727 Full-HD camcorder (as camera). For our demonstrator, there are up to five 
smart cameras, which should continuously track a person or an object that has been 
manually selected by a user.

The demonstrator contains the following folders:

/hw ...... containing the hardware architecture (autonomous networking architecture, 
           video input modules, color conversion, etc.)
/linux ... containing the hw/sw interface, which initialized the network-on-chip, 
           the software part of the tracking application[TODO], and the protocol 
           graph adaptation strategy [TODO]
/gui ..... containing a graphical user interface to centrally monitor and control 
           all smart cameras (frames, tracking information [TODO], current protocol 
           stack [TODO], etc.)

To build this design you need the following pcores from AVNET:
- fmc_imageon_hdmi_in_v2_01_a
- fmc_imageon_hdmi_out_v2_02_a

You can get them on http://www.em.avnet.com. However, you need to register as a customer.

Please copy these pcores to the folder /hw/edk/pcores !

After this step you can build the hw design, sw application and the gui. 
Note that the graphical user interface in /gui runs on a workstation.
For the gui you need OpenCV 2.3 or OpenCV 2.4 (including the development libs).

> cd hw/edk
> make all
> cd ../../linux
> make
> cd ../gui
> make all






