                                                       ____  _____
                           ________  _________  ____  / __ \/ ___/
                          / ___/ _ \/ ___/ __ \/ __ \/ / / /\__ \
                         / /  /  __/ /__/ /_/ / / / / /_/ /___/ /
                        /_/   \___/\___/\____/_/ /_/\____//____/

======================================================================

  title:        ReconOS

  project:      ReconOS
  author:       Christoph Rüthing, University of Paderborn
  description:  This document explains how to upgrade a running
                ReconOS application from version 3.0 to 3.1.

  History
  Date     | Rev | Author        | What
  ---------+-----+---------------+------------------------
  20.11.13 | 1.0 | C. Rüthing    | Initial Version
  ---------+-----+---------------+------------------------

======================================================================

1. Software Application

The Software API of version 3.1 is fully backward compatible to version
3.0. Therefore, the software application needs only slightly
adjustments. The function reconos_init_autodetect() and reconos_init(int,int)
are no longer present. Instead use simply reconos_init().
You also need to adjust your makefile to the new library location in
$RECONOS/<os>/lib/.


2. Hardware Threads

The ReconOS API used by the hardware threads also does not change. The only
difference are port of the hardware thread. Instead of the old ReconOS ports
including the FSLs and FIFO32 interfaces now use the following ones and
upgrade both the mpd and vhdl files. Furthermore, you need to adjust the
setup functions to theses new ports.
After these changes you can use the new setup-script to create a new
hardware design.

>> BEGIN: VHDL Port specification

-- OSIF FIFO ports
OSIF_FIFO_Sw2Hw_Data    : in  std_logic_vector(31 downto 0);
OSIF_FIFO_Sw2Hw_Fill    : in  std_logic_vector(15 downto 0);
OSIF_FIFO_Sw2Hw_Empty   : in  std_logic;
OSIF_FIFO_Sw2Hw_RE      : out std_logic;

OSIF_FIFO_Hw2Sw_Data    : out std_logic_vector(31 downto 0);
OSIF_FIFO_Hw2Sw_Rem     : in  std_logic_vector(15 downto 0);
OSIF_FIFO_Hw2Sw_Full    : in  std_logic;
OSIF_FIFO_Hw2Sw_WE      : out std_logic;

-- MEMIF FIFO ports
MEMIF_FIFO_Hwt2Mem_Data    : out std_logic_vector(31 downto 0);
MEMIF_FIFO_Hwt2Mem_Rem     : in  std_logic_vector(15 downto 0);
MEMIF_FIFO_Hwt2Mem_Full    : in  std_logic;
MEMIF_FIFO_Hwt2Mem_WE      : out std_logic;

MEMIF_FIFO_Mem2Hwt_Data    : in  std_logic_vector(31 downto 0);
MEMIF_FIFO_Mem2Hwt_Fill    : in  std_logic_vector(15 downto 0);
MEMIF_FIFO_Mem2Hwt_Empty   : in  std_logic;
MEMIF_FIFO_Mem2Hwt_RE      : out std_logic;

HWT_Clk   : in  std_logic;
HWT_Rst   : in  std_logic;

<< END: VHDL Port specification


>> BEGIN: MPD Port specification

## Bus Interfaces
BUS_INTERFACE BUS=OSIF_FIFO_Sw2Hw, BUS_STD=S_FIFO, BUS_TYPE=INITIATOR
BUS_INTERFACE BUS=OSIF_FIFO_Hw2Sw, BUS_STD=M_FIFO, BUS_TYPE=INITIATOR
BUS_INTERFACE BUS=MEMIF_FIFO_Hwt2Mem, BUS_STD=M_FIFO, BUS_TYPE=INITIATOR
BUS_INTERFACE BUS=MEMIF_FIFO_Mem2Hwt, BUS_STD=S_FIFO, BUS_TYPE=INITIATOR

## Peripheral ports
PORT OSIF_FIFO_Sw2Hw_Data = "S_FIFO_Data", DIR = I, VEC = [31:0], BUS = OSIF_FIFO_Sw2Hw
PORT OSIF_FIFO_Sw2Hw_Fill = "S_FIFO_Fill", DIR = I, VEC = [15:0], BUS = OSIF_FIFO_Sw2Hw
PORT OSIF_FIFO_Sw2Hw_Empty = "S_FIFO_Empty", DIR = I, BUS = OSIF_FIFO_Sw2Hw
PORT OSIF_FIFO_Sw2Hw_RE = "S_FIFO_RE", DIR = O, BUS = OSIF_FIFO_Sw2Hw

PORT OSIF_FIFO_Hw2Sw_Data = "M_FIFO_Data", DIR = O, VEC = [31:0], BUS = OSIF_FIFO_Hw2Sw
PORT OSIF_FIFO_Hw2Sw_Rem = "M_FIFO_Rem", DIR = I, VEC = [15:0], BUS = OSIF_FIFO_Hw2Sw
PORT OSIF_FIFO_Hw2Sw_Full = "M_FIFO_Full", DIR = I, BUS = OSIF_FIFO_Hw2Sw
PORT OSIF_FIFO_Hw2Sw_WE = "M_FIFO_WE", DIR = O, BUS = OSIF_FIFO_Hw2Sw

PORT MEMIF_FIFO_Hwt2Mem_Data = "M_FIFO_Data", DIR = O, VEC = [31:0], BUS = MEMIF_FIFO_Hwt2Mem
PORT MEMIF_FIFO_Hwt2Mem_Rem = "M_FIFO_Rem", DIR = I, VEC = [15:0], BUS = MEMIF_FIFO_Hwt2Mem
PORT MEMIF_FIFO_Hwt2Mem_Full = "M_FIFO_Full", DIR = I, BUS = MEMIF_FIFO_Hwt2Mem
PORT MEMIF_FIFO_Hwt2Mem_WE = "M_FIFO_WE", DIR = O, BUS = MEMIF_FIFO_Hwt2Mem

PORT MEMIF_FIFO_Mem2Hwt_Data = "S_FIFO_Data", DIR = I, VEC = [31:0], BUS = MEMIF_FIFO_Mem2Hwt
PORT MEMIF_FIFO_Mem2Hwt_Fill = "S_FIFO_Fill", DIR = I, VEC = [15:0], BUS = MEMIF_FIFO_Mem2Hwt
PORT MEMIF_FIFO_Mem2Hwt_Empty = "S_FIFO_Empty", DIR = I, BUS = MEMIF_FIFO_Mem2Hwt
PORT MEMIF_FIFO_Mem2Hwt_RE = "S_FIFO_RE", DIR = O, BUS = MEMIF_FIFO_Mem2Hwt

PORT HWT_Clk = "", DIR = I, SIGIS = Clk
PORT HWT_Rst = "", DIR = I, SIGIS = Rst

<< END: MPD Port specification


>> BEGIN: VHDL setup functions

osif_setup (
	i_osif,
	o_osif,
	OSIF_FIFO_Sw2Hw_Data,
	OSIF_FIFO_Sw2Hw_Fill,
	OSIF_FIFO_Sw2Hw_Empty,
	OSIF_FIFO_Hw2Sw_Rem,
	OSIF_FIFO_Hw2Sw_Full,
	OSIF_FIFO_Sw2Hw_RE,
	OSIF_FIFO_Hw2Sw_Data,
	OSIF_FIFO_Hw2Sw_WE
);

memif_setup (
	i_memif,
	o_memif,
	MEMIF_FIFO_Mem2Hwt_Data,
	MEMIF_FIFO_Mem2Hwt_Fill,
	MEMIF_FIFO_Mem2Hwt_Empty,
	MEMIF_FIFO_Hwt2Mem_Rem,
	MEMIF_FIFO_Hwt2Mem_Full,
	MEMIF_FIFO_Mem2Hwt_RE,
	MEMIF_FIFO_Hwt2Mem_Data,
	MEMIF_FIFO_Hwt2Mem_WE
);

ram_setup (
	i_ram,
	o_ram,
	o_RAMAddr_reconos_2,
	o_RAMWE_reconos,
	o_RAMData_reconos,
	i_RAMData_reconos
);

<< END: VHDL setup functions
